# Config for my custom printer (started out as a Wilson TS).
# Based on generic-ramps.cfg.
# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: ar54
dir_pin: !ar55
enable_pin: !ar38
step_distance: .0125
endstop_pin: ^ar3
position_endstop: -15
position_min: -15
position_max: 200
homing_speed: 50

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
step_distance: .0125
endstop_pin: ^ar14
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
step_distance: .005
endstop_pin: ^ar18
position_endstop: 0.780
position_min: -1
position_max: 200

# TODO: enable/tune pressure_advance
[extruder]
step_pin: ar26
dir_pin: !ar28
enable_pin: !ar24
step_distance: .014286
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
control: pid
pid_Kp: 20.656
pid_Ki: 0.906
pid_Kd: 117.742
min_temp: 0
max_temp: 315

[tmc2208 stepper_x]
uart_pin: ar63 # RX pin
tx_pin: ar40
microsteps: 16
# TODO disable interpolation since it expects stable step frequency? (which klipper doesn't do)
interpolate: True
run_current: 0.800
hold_current: 0.400
# TODO tune threshold? lower *rpm* (~1..50) = less jerk, but peak torque crossover is ~150 rpm.
# Reference: https://github.com/KevinOConnor/klipper/issues/196
stealthchop_threshold: 50

[tmc2208 stepper_y]
uart_pin: ar64 # RX pin
tx_pin: ar59
microsteps: 16
interpolate: True
run_current: 0.800
hold_current: 0.400
stealthchop_threshold: 50

[tmc2208 stepper_z]
uart_pin: ar65 # RX pin
tx_pin: ar42
microsteps: 8
interpolate: True
run_current: 0.800
hold_current: 0.400
stealthchop_threshold: 20

[tmc2208 extruder]
uart_pin: ar66 # RX pin
tx_pin: ar44
microsteps: 8 # FIXME
interpolate: True
run_current: 0.800
hold_current: 0.400
stealthchop_threshold: 50

[endstop_phase]

[endstop_phase stepper_z]
endstop_phase = 25
#endstop_align_zero: True # TODO enable and re-level so that layers align with full step phases

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
control: pid
pid_Kp: 66.603
pid_Ki: 0.731
pid_Kd: 1516.047
min_temp: 0
max_temp: 130

[fan]
pin: ar6

[heater_fan e0_fan]
# Pin modified from RAMPS default because I (used to) use dual extruders.
pin: ar11
heater: extruder
shutdown_speed: 0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100
# TODO tune square_corner_velocity (junction deviation speed).
#square_corner_velocity: 5.0
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The default is 5mm/s.

# "RepRapDiscount 2004 Smart Controller" type displays
[display]
lcd_type: hd44780
rs_pin: ar16
e_pin: ar17
d4_pin: ar23
d5_pin: ar25
d6_pin: ar27
d7_pin: ar29
encoder_pins: ^ar31, ^ar33
click_pin: ^!ar35
kill_pin: ^!ar41

# TODO: bed leveling - https://www.klipper3d.org/Manual_Level.html
[bed_screws]
screw1: 40,275
screw2: 40,40
screw3: 200,150

# TODO: figure out PSU switching - might "just work" with klipper but not likely
#       - Trinamic TMC2208s need 12v before 5v and have protection diodes)
#       - Alternative: connect relay to rpi instead of arduino and control from there
#       - Alternative: connect SSR to always-on 5v pin, use klipper to turn usb on/off
#                      (i.e. ssr would always be on while arduino is on)
#       - Alternative: different SSR with lower turn-on voltage/current?
# [output_pin ps_on]
# pin: ar12
# value: 1